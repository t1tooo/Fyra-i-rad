.board {
  aspect-ratio: 1/1;
  margin: 0 auto;
  margin-top: min(5vh, 5vw);
  border-bottom: 2px solid #fff;
  border-left: 2px solid #fff;
  border-radius: 20px;
  container: cell / size;
  height: 80vw;

  @media(min-aspect-ratio: 0.8) {
    & {
      height: 60vh;
    }
  }

  @media(min-aspect-ratio: 2) {
    & {
      height: 50vh;
    }
  }

  .cell {
    aspect-ratio: 1/1;
    position: relative;
    float: left;
    border-top: 2px solid rgb(255, 255, 255);
    border-right: 2px solid rgb(255, 255, 255);
    width: 33.33%;
    font-family: 'Rock Salt';

    &:nth-child(odd) {
      background-color: rgb(25, 67, 158);
    }

    &:nth-child(even) {
      background-color: rgb(179, 29, 29);
    }

    &:nth-child(1) {
      border-top-left-radius: 20px;
    }

    &:nth-child(3) {
      border-top-right-radius: 20px;
    }

    &:nth-child(7) {
      border-bottom-left-radius: 20px;
    }

    &:nth-child(9) {
      border-bottom-right-radius: 20px;
    }

    &::before {
      content: '';
      width: 100%;
      position: absolute;
      color: white;
      font-size: 14cqw;
      text-align: center;
      opacity: 0;
      transition: opacity 1s;
    }

    &.X::before {
      content: 'X';
      opacity: 1;
    }

    &.O::before {
      content: 'O';
      opacity: 1;
    }
  }
}

/* show which cells that are clickable */
body[gameInProgress="true"] {

  .cell:not(.X, .O) {
    cursor: pointer;
  }

  /* pre-show the correct piece on hover/mouse-over*/

  &[currentPlayerColor="X"] .cell:not(.X, .O):hover::before {
    content: 'X';
    opacity: 0.5;
  }

  &[currentPlayerColor="O"] .cell:not(.X, .O):hover::before {
    content: 'O';
    opacity: 0.5;
  }

}

/* show the winning combo, with a blinking animation */

.cell.in-win::before {
  animation: blink 2s linear infinite;
}

@keyframes blink {
  50% {
    opacity: 0.5;
  }
}